#********************************************************************
# Wrapper Properties
#********************************************************************

# Used during testing..
wrapper.debug=TRUE

# Java Application
wrapper.java.command=%JAVA_HOME%/bin/java

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=wrapper/lib/wrapper.jar
wrapper.java.classpath.2=start.jar
wrapper.java.classpath.3=lib/*.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=wrapper/lib

# Java Additional Parameters
wrapper.java.additional.1=-Djetty.base=.
#wrapper.java.additional.2=-DGEOSERVER_DATA_DIR="%GEOSERVER_DATA_DIR%"
wrapper.java.additional.2=-DGEOSERVER_DATA_DIR="@@GeoserverDataDir@@"
wrapper.java.additional.3=-Djava.io.tmpdir=work

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=128

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=756

# Application parameters.  Add parameters as needed starting from 1
# (These may be overriden on the command line)
wrapper.app.parameter.1=org.eclipse.jetty.start.Main
wrapper.app.parameter.2=etc/jetty.xml
wrapper.app.parameter.3=--module=http
wrapper.app.parameter.4=jetty.http.host=@@GeoserverIpAddress@@
wrapper.app.parameter.5=jetty.http.port=@@GeoserverPort@@

# Add optional parameters to enable Marlin renderer
#include wrapper/marlin.conf

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=M

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper NT Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
#wrapper.ntservice.name=GeoServer 2.16.0 @@SitkaProductName@@
wrapper.ntservice.name=@@SitkaWindowsServiceName@@

# Display name of the service
#wrapper.ntservice.displayname=GeoServer 2.16.0 @@SitkaProductName@@
wrapper.ntservice.displayname=@@SitkaWindowsServiceName@@

# Description of the service
wrapper.ntservice.description=GeoServer [@@SitkaProductName@@] is an open source software server written in Java that allows users to share and edit geospatial data.

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START. 
# DELAY_START is mentioned in the documentation, but doesn't work, and comes up as "Manual" if used. It may be a "pro-only" feature. -- SLG
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

# Run service as Network Service
# wrapper.ntservice.account=NT AUTHORITY\NetworkService
wrapper.ntservice.account=@@ServiceAccountName@@

# This file is present just long enough to be included as part of the
# service installation, after which it is deleted, since plaintext
# passwords are a security risk. It defines wrapper.ntservice.password,
# the password for the service account used to run the Geoserver Service.
# -- SLG

# This is used only once, during installation of the service, and then wiped.
wrapper.ntservice.password=@@ServiceAccountPassword@@

# We would LIKE to do this, to avoid the above line, but after many, many attempts I opted to wipe the password in place, which is equally secure,
# but unfortunately a bit less clear. The idea is that the service password is used only once, during installation.
######include wrapper.conf.servicepassword
